#include <stdio.h>
#include <string.h>

#define MAX_PRODUCTS 5

typedef struct {
    int id;
    char name[50];
    int price;
    int stock;
    int sales;
    int totalSalesAmount;
} Product;

void addStock(Product products[], int* count) {
    int id, quantity, price;
    char name[50];
    
    printf("상품ID : ");
    scanf("%d", &id);

    int existingProduct = -1;
    for (int i = 0; i < *count; i++) {
        if (products[i].id == id) {
            existingProduct = i;
            break;
        }
    }

    if (existingProduct != -1) {
        printf("입고량 : ");
        scanf("%d", &quantity);
        products[existingProduct].stock += quantity;
        printf("입고가 완료되었습니다.\n");
    } else {
        if (*count >= MAX_PRODUCTS) {
            printf("상품 수가 최대치에 도달했습니다.\n");
            return;
        }

        printf("상품명 : ");
        scanf("%s", name);
        printf("입고량 : ");
        scanf("%d", &quantity);
        printf("판매가격 : ");
        scanf("%d", &price);

        products[*count].id = id;
        strcpy(products[*count].name, name);
        products[*count].stock = quantity;
        products[*count].price = price;
        products[*count].sales = 0;
        products[*count].totalSalesAmount = 0;
        (*count)++;
        printf("새 상품이 추가되었습니다.\n");
    }
}

void sellProduct(Product products[], int count) {
    int id, quantity;
    printf("상품ID : ");
    scanf("%d", &id);

    int productIndex = -1;
    for (int i = 0; i < count; i++) {
        if (products[i].id == id) {
            productIndex = i;
            break;
        }
    }

    if (productIndex == -1) {
        printf("존재하지 않는 상품입니다.\n");
        return;
    }

    printf("판매량 : ");
    scanf("%d", &quantity);

    if (products[productIndex].stock < quantity) {
        printf("재고가 부족합니다.\n");
    } else {
        products[productIndex].stock -= quantity;
        products[productIndex].sales += quantity;
        products[productIndex].totalSalesAmount += quantity * products[productIndex].price;
        printf("판매가 완료되었습니다.\n");
    }
}

void displayProductInfo(Product products[], int count) {
    int id;
    printf("조회할 상품ID : ");
    scanf("%d", &id);

    int productIndex = -1;
    for (int i = 0; i < count; i++) {
        if (products[i].id == id) {
            productIndex = i;
            break;
        }
    }

    if (productIndex == -1) {
        printf("존재하지 않는 상품입니다.\n");
        return;
    }

    printf("상품명 : %s\n", products[productIndex].name);
    printf("판매가격 : %d\n", products[productIndex].price);
    printf("입고량 : %d\n", products[productIndex].stock);
    printf("총 판매량 : %d\n", products[productIndex].sales);
    printf("총 판매금액 : %d\n", products[productIndex].totalSalesAmount);
}

void displayAllProducts(Product products[], int count) {
    printf("전체 상품 현황:\n");
    for (int i = 0; i < count; i++) {
        printf("ID: %d, 상품명: %s, 재고수량: %d, 총판매량: %d, 총판매금액: %d\n",
               products[i].id, products[i].name, products[i].stock, products[i].sales, products[i].totalSalesAmount);
    }
}

int main() {
    int choice;
    int count = 0;
    Product products[MAX_PRODUCTS] = {0};

    while (1) {
        printf("\n[쇼핑몰 관리 프로그램]\n");
        printf("1. 입고\n2. 판매\n3. 개별상품정보\n4. 전체상품정보\n5. 종료\n");
        printf("원하는 메뉴를 선택하세요: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addStock(products, &count);
                break;
            case 2:
                sellProduct(products, count);
                break;
            case 3:
                displayProductInfo(products, count);
                break;
            case 4:
                displayAllProducts(products, count);
                break;
            case 5:
                printf("프로그램을 종료합니다.\n");
                return 0;
            default:
                printf("잘못된 입력입니다. 다시 선택하세요.\n");
                break;
        }
    }
    return 0;
}
