#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_PRODUCTS 5
#define FILE_NAME "product_data.txt"

typedef struct {
    int id;
    char name[50];
    int price;
    int stock;
    int sold;
    int total_sales;
} Product;

void initializeProducts(Product products[], int size) {
    for (int i = 0; i < size; i++) {
        products[i].id = i + 1;
        strcpy(products[i].name, "Undefined");
        products[i].price = 0;
        products[i].stock = 0;
        products[i].sold = 0;
        products[i].total_sales = 0;
    }
}

void addProductInfo(Product products[], int size) {
    int id;
    printf("Enter Product ID (1-%d): ", size);
    scanf("%d", &id);

    if (id < 1 || id > size) {
        printf("Invalid Product ID!\n");
        return;
    }

    id -= 1; // Adjust for array index
    printf("Enter Product Name: ");
    scanf("%s", products[id].name);
    printf("Enter Product Price: ");
    scanf("%d", &products[id].price);
    printf("Enter Initial Stock: ");
    scanf("%d", &products[id].stock);

    printf("Product Information Updated Successfully.\n");
}

void addStock(Product products[], int size) {
    int id, quantity;
    printf("Enter Product ID (1-%d): ", size);
    scanf("%d", &id);

    if (id < 1 || id > size) {
        printf("Invalid Product ID!\n");
        return;
    }

    printf("Enter Stock Quantity to Add: ");
    scanf("%d", &quantity);

    products[id - 1].stock += quantity;
    printf("Stock Updated Successfully.\n");
}

void sellProduct(Product products[], int size) {
    int id, quantity;
    printf("Enter Product ID (1-%d): ", size);
    scanf("%d", &id);

    if (id < 1 || id > size) {
        printf("Invalid Product ID!\n");
        return;
    }

    printf("Enter Quantity to Sell: ");
    scanf("%d", &quantity);

    if (products[id - 1].stock >= quantity) {
        products[id - 1].stock -= quantity;
        products[id - 1].sold += quantity;
        products[id - 1].total_sales += quantity * products[id - 1].price;
        printf("Sale Completed Successfully.\n");
    } else {
        printf("Not Enough Stock Available!\n");
    }
}

void showProductStatus(Product products[], int size) {
    int id;
    printf("Enter Product ID (1-%d): ", size);
    scanf("%d", &id);

    if (id < 1 || id > size) {
        printf("Invalid Product ID!\n");
        return;
    }

    id -= 1;
    printf("\n--- Product Information ---\n");
    printf("ID: %d\n", products[id].id);
    printf("Name: %s\n", products[id].name);
    printf("Price: %d\n", products[id].price);
    printf("Stock: %d\n", products[id].stock);
    printf("Sold: %d\n", products[id].sold);
    printf("Total Sales: %d\n", products[id].total_sales);
    printf("---------------------------\n");
}

void showAllProducts(Product products[], int size) {
    printf("\n--- All Products ---\n");
    for (int i = 0; i < size; i++) {
        printf("ID: %d | Name: %s | Price: %d | Stock: %d | Sold: %d | Total Sales: %d\n",
               products[i].id, products[i].name, products[i].price,
               products[i].stock, products[i].sold, products[i].total_sales);
    }
    printf("--------------------\n");
}

void saveProducts(Product products[], int size) {
    FILE *file = fopen(FILE_NAME, "w");
    if (file == NULL) {
        printf("Error: Could Not Open File for Saving.\n");
        return;
    }

    for (int i = 0; i < size; i++) {
        fprintf(file, "%d %s %d %d %d %d\n",
                products[i].id, products[i].name, products[i].price,
                products[i].stock, products[i].sold, products[i].total_sales);
    }

    fclose(file);
    printf("Products Saved Successfully.\n");
}

void loadProducts(Product products[], int size) {
    FILE *file = fopen(FILE_NAME, "r");
    if (file == NULL) {
        printf("Error: No Saved Data Found.\n");
        return;
    }

    for (int i = 0; i < size; i++) {
        fscanf(file, "%d %s %d %d %d %d",
               &products[i].id, products[i].name, &products[i].price,
               &products[i].stock, &products[i].sold, &products[i].total_sales);
    }

    fclose(file);
    printf("Products Loaded Successfully.\n");
}

int main() {
    Product products[MAX_PRODUCTS];
    initializeProducts(products, MAX_PRODUCTS);

    int choice;
    do {
        printf("\n[Shopping Mall Management]\n");
        printf("1. Add Product Info\n");
        printf("2. Add Stock\n");
        printf("3. Sell Product\n");
        printf("4. Show Product Status\n");
        printf("5. Show All Products\n");
        printf("6. Save Products\n");
        printf("7. Load Products\n");
        printf("8. Exit\n");
        printf("Choose an Option: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addProductInfo(products, MAX_PRODUCTS);
                break;
            case 2:
                addStock(products, MAX_PRODUCTS);
                break;
            case 3:
                sellProduct(products, MAX_PRODUCTS);
                break;
            case 4:
                showProductStatus(products, MAX_PRODUCTS);
                break;
            case 5:
                showAllProducts(products, MAX_PRODUCTS);
                break;
            case 6:
                saveProducts(products, MAX_PRODUCTS);
                break;
            case 7:
                loadProducts(products, MAX_PRODUCTS);
                break;
            case 8:
                printf("Exiting Program...\n");
                break;
            default:
                printf("Invalid Choice! Please Try Again.\n");
        }
    } while (choice != 8);

    return 0;
}
